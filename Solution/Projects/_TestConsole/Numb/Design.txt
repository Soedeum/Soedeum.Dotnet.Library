rule Numb := Assignment* ;

rule Assignment := Variable Assignment Equation SemiColon;

rule Equation := Term {Operator Term} ;

rule Operator := Plus or Minus or Times or DivideBy or Exponent ;

rule Term := Variable or Number or EnclosedTerm ;

rule EnclosedTerm := [Plus or Minus] OpenParentheses Equation CloseParentheses ;


token Number :=  Integer [ '.' (numeric)+  ] [ ('E' or 'e') Integer ] ;

subtoken Integer := ['+' or '-'] +{numeric} ;

token Variable := (Alpha or '_') +{alphanumeric or '_'} ;

token Plus := '+' ;

token Minus := '-' ;

token Times := '*' ;

token DivideBy := '/' ;

token PowerOf := '^' ;        

token Assign := ':=' ;

token OpenParentheses := '(' ;

token CloseParentheses := ')' ;

token SemiColon := ';' ;

skiptoken Whitespace := {whitespace} ;

skiptoken LineComment := '#' not (eol or eof) ;


charset numeric := '0' to '9' ;

charset alpha := 'A' to 'Z' or 'a'..'z' ;

charset alphanumeric := alpha or numeric ;

charset eol := '\r' or '\n'

charset eof := '\0';

charset whitespace := ' ' or '\t' or eol ;
